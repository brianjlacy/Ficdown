//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ficdown.Parser.Render {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Template {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Template() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ficdown.Parser.Render.Template", typeof(Template).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///
        ///&lt;html lang=&quot;en&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///    &lt;title&gt;@Title&lt;/title&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;/&gt;
        ///&lt;/head&gt;
        ///    &lt;body&gt;
        ///        &lt;h1 class=&quot;title&quot;&gt;@Title&lt;/h1&gt;
        ///        @Description
        ///        &lt;p&gt;&lt;a href=&quot;@FirstScene&quot;&gt;Begin reading...&lt;/a&gt;&lt;/p&gt;
        ///    &lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string Index {
            get {
                return ResourceManager.GetString("Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///
        ///&lt;html lang=&quot;en&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///    &lt;title&gt;@Title&lt;/title&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot; /&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    @Content
        ///&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string Scene {
            get {
                return ResourceManager.GetString("Scene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* Adapted from http://wiki.mobileread.com/wiki/CSS_template */
        ///
        ///@page {
        ///    margin-top: 30px;
        ///    margin-bottom: 20px;
        ///}
        ///
        ///body {
        ///    margin-right: 30px;
        ///    margin-left: 30px;
        ///    padding: 0;
        ///}
        ///
        ///img {
        ///    max-width: 100%;
        ///    oeb-column-number: 1;
        ///    display: inline-block;
        ///}
        ///
        ///a {
        ///    font-style: italic;
        ///    color: #000;
        ///    text-decoration: none;
        ///}
        ///
        ///h1.title {
        ///    font-family: Verdana, Geneva, sans-serif;
        ///    font-size: x-large;
        ///    text-align: center;
        ///    font-weight: bold;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Styles {
            get {
                return ResourceManager.GetString("Styles", resourceCulture);
            }
        }
    }
}
